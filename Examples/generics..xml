<?xml version="1.0"?>
<Program>
  <ImportDirective ModuleName="System::Collections::Generic" />
  <ImportDirective ModuleName="reflection" />
  <Assignment Operator="None">
    <LeftOperand>
      <VariableRef Name="l" />
    </LeftOperand>
    <RightOperand>
      <ConstructorCall ClassName="LinkedList{1}" />
    </RightOperand>
  </Assignment>
  <ForLoop>
    <Initializers>
      <Assignment Operator="None">
        <LeftOperand>
          <VariableRef Name="i" />
        </LeftOperand>
        <RightOperand>
          <Literal Type="int" Value="1" />
        </RightOperand>
      </Assignment>
    </Initializers>
    <Guard>
      <BinaryExpression Operator="LessThan">
        <LeftOperand>
          <VariableRef Name="i" />
        </LeftOperand>
        <RightOperand>
          <Literal Type="int" Value="1000" />
        </RightOperand>
      </BinaryExpression>
    </Guard>
    <Updaters>
      <Assignment Operator="Times">
        <LeftOperand>
          <VariableRef Name="i" />
        </LeftOperand>
        <RightOperand>
          <Literal Type="int" Value="2" />
        </RightOperand>
      </Assignment>
    </Updaters>
    <Action>
      <MethodCall FunctionName="AddLast" Optional="False">
        <Target>
          <VariableRef Name="l" />
        </Target>
        <Arguments>
          <VariableRef Name="i" />
        </Arguments>
        <NamedArgs />
      </MethodCall>
    </Action>
  </ForLoop>
  <FunctionCall FunctionName="underline">
    <Arguments>
      <Literal Type="string" Value="LinkedList{1}:" />
    </Arguments>
    <NamedArgs />
  </FunctionCall>
  <ForEachLoop ValueName="item">
    <Enumerated>
      <VariableRef Name="l" />
    </Enumerated>
    <Action>
      <FunctionCall FunctionName="print">
        <Arguments>
          <StringInterpolation Pattern="[{0}]-&gt;">
            <Substitions>
              <VariableRef Name="item" />
            </Substitions>
          </StringInterpolation>
        </Arguments>
        <NamedArgs />
      </FunctionCall>
    </Action>
  </ForEachLoop>
  <FunctionCall FunctionName="println">
    <Arguments>
      <Literal Type="string" Value="END" />
    </Arguments>
    <NamedArgs />
  </FunctionCall>
  <FunctionCall FunctionName="println">
    <Arguments />
    <NamedArgs />
  </FunctionCall>
  <Assignment Operator="None">
    <LeftOperand>
      <VariableRef Name="d" />
    </LeftOperand>
    <RightOperand>
      <ConstructorCall ClassName="SortedDictionary{2}" />
    </RightOperand>
  </Assignment>
  <Assignment Operator="None">
    <LeftOperand>
      <VariableRef Name="names" />
    </LeftOperand>
    <RightOperand>
      <ListInitializer>
        <Items>
          <Literal Type="string" Value="john" />
          <Literal Type="string" Value="audrey" />
          <Literal Type="string" Value="kyle" />
          <Literal Type="string" Value="phil" />
          <Literal Type="string" Value="steve" />
          <Literal Type="string" Value="hans" />
        </Items>
      </ListInitializer>
    </RightOperand>
  </Assignment>
  <MethodCall FunctionName="each" Optional="False">
    <Target>
      <VariableRef Name="names" />
    </Target>
    <Arguments>
      <InlineFunction>
        <Parameters>
          <ParameterDecl Name="name" ByRef="False" VaArgs="False" />
        </Parameters>
        <Body>
          <Return>
            <Assignment Operator="None">
              <LeftOperand>
                <ItemRef Optional="False">
                  <Owner>
                    <VariableRef Name="d" />
                  </Owner>
                  <Index>
                    <VariableRef Name="name" />
                  </Index>
                </ItemRef>
              </LeftOperand>
              <RightOperand>
                <FunctionCall FunctionName="randint">
                  <Arguments>
                    <Literal Type="int" Value="18" />
                    <Literal Type="int" Value="40" />
                  </Arguments>
                  <NamedArgs />
                </FunctionCall>
              </RightOperand>
            </Assignment>
          </Return>
        </Body>
      </InlineFunction>
    </Arguments>
    <NamedArgs />
  </MethodCall>
  <FunctionCall FunctionName="underline">
    <Arguments>
      <Literal Type="string" Value="SortedDictionary{2}:" />
    </Arguments>
    <NamedArgs />
  </FunctionCall>
  <ForEachLoop ValueName="value" KeyName="key">
    <Enumerated>
      <VariableRef Name="d" />
    </Enumerated>
    <Action>
      <FunctionCall FunctionName="println">
        <Arguments>
          <StringInterpolation Pattern="{0}	: {1}">
            <Substitions>
              <VariableRef Name="key" />
              <VariableRef Name="value" />
            </Substitions>
          </StringInterpolation>
        </Arguments>
        <NamedArgs />
      </FunctionCall>
    </Action>
  </ForEachLoop>
  <FunctionCall FunctionName="println">
    <Arguments />
    <NamedArgs />
  </FunctionCall>
  <FunctionCall FunctionName="underline">
    <Arguments>
      <Literal Type="string" Value="System::Tuple{3}:" />
    </Arguments>
    <NamedArgs />
  </FunctionCall>
  <Assignment Operator="None">
    <LeftOperand>
      <VariableRef Name="t" />
    </LeftOperand>
    <RightOperand>
      <ConstructorCall ClassName="System::Tuple{3}">
        <Arguments>
          <Literal Type="string" Value="Jason Donovan" />
          <Literal Type="int" Value="32" />
          <Literal Type="date" Value="2010-03-15 00:00:00" />
        </Arguments>
        <NamedArgs />
      </ConstructorCall>
    </RightOperand>
  </Assignment>
  <FunctionCall FunctionName="println">
    <Arguments>
      <StringInterpolation Pattern="{0} is {1} years old, he works for us since {2}.">
        <Substitions>
          <PropertyRef PropertyName="Item1" Optional="False">
            <Owner>
              <VariableRef Name="t" />
            </Owner>
          </PropertyRef>
          <PropertyRef PropertyName="Item2" Optional="False">
            <Owner>
              <VariableRef Name="t" />
            </Owner>
          </PropertyRef>
          <PropertyRef PropertyName="Item3" Optional="False">
            <Owner>
              <VariableRef Name="t" />
            </Owner>
          </PropertyRef>
        </Substitions>
      </StringInterpolation>
    </Arguments>
    <NamedArgs />
  </FunctionCall>
  <FunctionCall FunctionName="readln">
    <Arguments />
    <NamedArgs />
  </FunctionCall>
</Program>