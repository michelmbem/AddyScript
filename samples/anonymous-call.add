//**************************************************************************************************
// "Anonymous Function Call" is a part of AddyScript's syntax that allows any expression to be used
// as a function. The expression must, however, be evaluated as a closure. Such an expression can be
// a call to a function that returns a closure, a reference to an element of a list of closures, or
// an inline function/lambda expression defined and invoked in-place.
//**************************************************************************************************

// fn returns a closure
function f(n)
{
	return |a, b| => (a + b)/n;
}

// l is a list with a single item of type closure
l = [function(p, q) { return p**(1.0/q); }];

x = randint(100);
y = randint(100);
z = randint(1, 11);
println('x = {0}; y = {1}; z = {2}', x, y, z);

w = (float)f(z)(x, y);
println('(x + y)/z = {0}', w);

w = (float)l[0](x, y);
println('x**(1.0/y) = {0}', w);

// immediate invocation of an inline function
w = (|a, b, c| => a**2 + 3*b - 4*c)(x, y, z);
println('x**2 + 3*y - 4*z = {0}', w);

readln();